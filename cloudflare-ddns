#!/bin/sh
conf_file="/etc/cloudflare-ddns.conf"
if [ -f $conf_file ]; then
    . $conf_file
else
    echo 'OwO... Configuration file not found...'
    exit 0
fi
export no_proxy=$internet_ip_api
ip_file="/etc/cloudflare-ddns.ip.txt"
if [ "$eth_card" = "auto" ]; then
    eth_card=""
else
    eth_card="oif $eth_card"
fi
if [ "$record_type" = "AAAA" ]; then
    if [ "$ip_index" = "internet" ]; then
        ip=$(curl -s -6 ip.sb)
    elif [ "$ip_index" = "local" ]; then
        ip=$(ip route get ff:: $eth_card | grep -Eo "src [a-f0-9:]+" | head -1 | cut -d ' ' -f2)
    else
        echo "Error IP index"
        exit 0
    fi
elif [ "$record_type" = "A" ]; then
    if [ "$ip_index" = "internet" ]; then
        ip=$(curl -s -4 ip.sb)
    elif [ "$ip_index" = "local" ]; then
        ip=$(ip route get 255.255.255.255 $eth_card | grep -Eo "src [0-9.]+" | head -1 | cut -d ' ' -f2)
    else
        echo "Error IP index"
        exit 0
    fi
else
    echo "Error DNS type"
    exit 0
fi
if [ -f $ip_file ]; then
    old_ip=$(cat $ip_file)
    if [ "$ip" = "$old_ip" ]; then
        echo "IP has not changed."
        exit 0
    fi
else
    if [ $(expr length "$ip") = 0 ]; then
        echo "Error 127001: There is no place like home... (No external IP detected)"
        exit 0
    fi
fi
zone_identifier=$(
    curl -s -X GET "https://api.cloudflare.com/client/v4/zones?name=$zone_name" \
        -H "Authorization: Bearer $auth_key" \
        -H "content-type: application/json" | grep -Po '(?<="id":")[^"]*' | head -1
)
record_identifier=$(
    curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records?type=${record_type}&name=$record_name" \
        -H "Authorization: Bearer $auth_key" \
        -H "Content-Type: application/json" | grep -Po '(?<="id":")[^"]*'
)
update=$(
    curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/$record_identifier" \
        -H "Authorization: Bearer $auth_key" \
        -H "Content-Type: application/json" \
        --data "{\"type\":\"$record_type\",\"name\":\"$record_name\",\"content\":\"$ip\",\"ttl\":1,\"proxied\":false}"
)
case "$update" in
*"\"success\":true"*)
    echo "$ip" >$ip_file
    echo "IP for $record_name changed to $ip"
    exit 0
    ;;
*)
    message="API UPDATE FAILED. DUMPING RESULTS:\n$update"
    echo -e "$message"
    exit 1
    ;;
esac
